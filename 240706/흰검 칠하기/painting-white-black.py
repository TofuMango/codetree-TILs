# 타일의 최대 범위 설정
MAX_K = 100000

# 명령줄의 수 n 입력
n = int(input())
# 타일의 색상을 저장하는 배열
a = [0] * (2 * MAX_K + 1)
# 검은색으로 칠해진 횟수를 저장하는 배열
cnt_b = [0] * (2 * MAX_K + 1)
# 하얀색으로 칠해진 횟수를 저장하는 배열
cnt_w = [0] * (2 * MAX_K + 1)
# 검/흰/회색 타일 갯수 저장하는 변수
b, w, g = 0, 0, 0

# 타일의 현재 위치를 최대 범위로 설정, 배열의 중간에 위치하게됨
cur = MAX_K
# 명령처리
for _ in range(n):
    # 명령을 입력받아서 x와 c로 분리, x는 타일 이동 수, c는 방향(L,R)
    x, c = tuple(input().split())
    # x를 문자열형태로 입력받았으므로 정수 형태로 변환하기
    x = int(x)
    # c가 Left일때,
    if c == 'L':
        # 만약 이동횟수가 0이상이라면 아래를 실행하고 x값이 0이 되면 루프가 종료될거임.
        while x > 0:
            # 타일색상을 저장하는 배열인 a에 1(1은 흰색임) 저장. 처음엔 a[100000]에 1이 저장 될거임
            a[cur] = 1
            # 하얀색으로 칠해진 횟수를 저장하는 배열의 같은 위치에 +1 하기
            cnt_w[cur] += 1
            # x를 (타일 이동횟수) 하나 뺴주고..
            x -= 1
            # x가 0이 아니라면 현재 위치에서 1빼주기
            if x: 
                cur -= 1
    else:
        # x가 0 이상일때.
        while x > 0:
            # 2는 검은색임
            a[cur] = 2
            # 검은색으로 칠해진 횟수에 +1
            cnt_b[cur] += 1
            # 이동횟수는 1차감
            x -= 1
            # x가 0이 아니라면 현재 위치에서 +1(우측으로 이동하는거니까)
            if x: 
                cur += 1
# 전체배열을 순회
for i in range(2 * MAX_K + 1):
    # 검은색/흰색으로 칠해진 횟수가 2이상일때,
    if cnt_b[i] >= 2 and cnt_w[i] >= 2: 
        # 회색 +1
        g += 1
    # 현재 타일 색상이 흰색일때
    elif a[i] == 1: 
        # 흰색 +1
        w += 1
    # 현재 타일색상이 검은색일때
    elif a[i] == 2: 
        # 검은색 +1
        b += 1
# 정답출력
print(w, b, g)